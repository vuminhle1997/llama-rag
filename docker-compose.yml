version: '3.8'

services:
  phoenix:
    image: arizephoenix/phoenix:latest
    container_name: gct-insight-chat-phoenix
    restart: always
    # env_file:
    #   - .env
    # environment:
    #   PHOENIX_ENABLE_AUTH: ${PHOENIX_ENABLE_AUTH}
    #   PHOENIX_SECRET: ${PHOENIX_SECRET}
    ports:
      - '6006:6006' # UI and OTLP HTTP collector
      - '4317:4317' # OTLP gRPC collector
    volumes:
      - phoenix_data:/mnt/data
    networks:
      - gct-apps
  ollama:
    image: ollama/ollama:latest
    container_name: gct-insight-chat-ollama
    restart: always
    ports:
      - '11434:11434'
    volumes:
      - ollama_data:/root/.ollama
      # - /home/kiwerkstatt/.ollama:/root/.ollama
    networks:
      - gct-apps
  redis:
    image: redis:latest
    container_name: gct-insight-chat-redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--appendonly', 'yes']
    networks:
      - gct-apps
  chromadb:
    image: chromadb/chroma:1.0.4
    container_name: gct-insight-chat-chromadb
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - chromadb_data:/data
    networks:
      - gct-apps
  mysql:
    image: mysql:8.4
    container_name: gct-insight-chat-mysql
    command: mysqld --mysql_native_password=ON
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - gct-apps
  postgres:
    image: postgres:latest
    container_name: gct-insight-chat-postgres
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
    volumes:
      - postgres_data:/data
    networks:
      - gct-apps
  nextjs:
    image: globalct-insight-chat-nextjs:latest
    container_name: gct-insight-chat-nextjs
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
    restart: always
    depends_on:
      - fastapi
      - redis
      - mysql
      - postgres
      - chromadb
    networks:
      - gct-apps
  fastapi:
    image: globalct-insight-chat-fastapi:latest
    container_name: gct-insight-chat-fastapi
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - '4000:4000'
    volumes:
      - backend_data:/var/app/backend/uploads
    depends_on:
      - redis
      - mysql
      - postgres
      - chromadb
      - ollama
    networks:
      - gct-apps
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: gct-insight-chat-phpmyadmin
    restart: always
    env_file:
      - .env
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '8080:80'
    depends_on:
      - mysql
    networks:
      - gct-apps
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gct-insight-chat-pgadmin
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - gct-apps

volumes:
  redis_data:
    driver: local
  chromadb_data:
    driver: local
  mysql_data:
    driver: local
  postgres_data:
    driver: local
  backend_data:
    driver: local
  ollama_data:
    driver: local
  phoenix_data:
    driver: local
  llmsherpa_data:
    driver: local

networks:
  gct-apps:
    driver: bridge
